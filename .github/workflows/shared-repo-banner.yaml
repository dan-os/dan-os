name: GitHub Repo Banner

on:
  workflow_call:
    inputs:
      ref:
        description: "Checkout ref"
        type: string
        required: false
        default: ${{ github.ref_name }}
      repository:
        description: "Checkout repository"
        type: string
        required: false
        default: ${{ github.repository }}
      token:
        description: "GitHub token"
        type: string
        required: false
        default: ${{ github.token }}
      commit_method:
        description: "The method to apply changes. Can be either 'commit' or 'pr'."
        type: string
        required: true
        default: commit

permissions:
  contents: write
  pull-requests: write

jobs:
  generate:
    runs-on: ubuntu-latest

    concurrency:
      group: "${{ github.workflow }}@${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          repository: ${{ inputs.repository }}
          fetch-depth: 0
          token: ${{ inputs.token }}

      - name: Fetch repo metadata
        id: metadata
        uses: ahmadnassri/action-metadata@v2

      - name: Prevent repo banner generation for profile repo
        if: steps.metadata.outputs.repository_name == steps.metadata.outputs.owner_login
        run: |
          echo "### âœ‹ A repo banner cannot be generated in the profile repo!" >> $GITHUB_STEP_SUMMARY
          exit 1

      - name: Checkout repo containing banner assets
        if: steps.metadata.outputs.repository_name != steps.metadata.outputs.owner_login
        uses: actions/checkout@v4
        with:
          # this is the github profile repo e.g. dan-os/dan-os
          repository: "${{ steps.metadata.outputs.owner_login }}/${{ steps.metadata.outputs.owner_login }}"
          ref: "main"
          path: "github"
          token: ${{ inputs.token }}

      - uses: actions-tools/yaml-outputs@49506207f91d468273fd5e73fbd18d6d2d9df9b1
        id: readme
        with:
          file-path: "README.yaml"
          fail-on-file-not-found: false

      - name: Format repo metadata
        id: meta
        uses: actions/github-script@v7
        env:
          README_NAME: ${{ steps.readme.outputs.name }}
          README_DESCRIPTION: ${{ steps.readme.outputs.repository_description }}
          REPOSITORY_NAME: ${{ steps.metadata.outputs.repository_name }}
          REPOSITORY_DESCRIPTION: ${{ steps.metadata.outputs.repository_description }}
        with:
          script: |
            const wrapEmoji = (text) => {
              // Ref: https://gist.github.com/srsbiz/2b1b4d624e82bf5c92fceb12aad4cd22
              const reEmoji = /\p{RI}\p{RI}|\p{Emoji}(\p{EMod}+|\u{FE0F}\u{20E3}?|[\u{E0020}-\u{E007E}]+\u{E007F})?(\u{200D}\p{Emoji}(\p{EMod}+|\u{FE0F}\u{20E3}?|[\u{E0020}-\u{E007E}]+\u{E007F})?)+|\p{EPres}(\p{EMod}+|\u{FE0F}\u{20E3}?|[\u{E0020}-\u{E007E}]+\u{E007F})?|\p{Emoji}(\p{EMod}+|\u{FE0F}\u{20E3}?|[\u{E0020}-\u{E007E}]+\u{E007F})/gu;
              return text.replace(reEmoji, '<span class="emoji" role="img" aria-hidden="true">$&</span>');
            }

            let name = process.env.README_NAME || process.env.REPOSITORY_NAME
            let desc = process.env.README_DESCRIPTION || process.env.REPOSITORY_DESCRIPTION;
            let type = 'Project';
            let output = '.github/banner.png';

            // Logic to determine repository type and modify name and type accordingly
            if (name.startsWith('gha-')) {
              type = 'GitHub Action';
            }

            // Snip description
            if (desc === 'null') {
              desc = '';
            } else {
              desc = desc.split('.')[0]; // Keeping only the first sentence
            }

            // Wrap emojis
            type = wrapEmoji(type);
            name = wrapEmoji(name);
            desc = wrapEmoji(desc);

            // Set outputs
            core.setOutput('type', type);
            core.setOutput('name', name);
            core.setOutput('desc', desc);
            core.setOutput('output', output);

      - name: Generate banner image
        id: screenshot
        uses: cloudposse-github-actions/screenshot@main
        with:
          url: "file://${{github.workspace}}/github/banner/repo/index.html"
          output: "${{ steps.meta.outputs.output }}"
          customizations: |
            "#name": >-
              ${{ steps.meta.outputs.name }}
            "#type": >-
              ${{ steps.meta.outputs.type }}
            "#desc": >-
              ${{ steps.meta.outputs.desc }}
          viewportWidth: 1280
          viewportHeight: 320
          omitBackground: true

      - uses: stefanzweifel/git-auto-commit-action@v5
        if: inputs.commit_method == 'commit'
        name: Commit artifact
        id: auto-commit
        env:
          GITHUB_TOKEN: ${{ inputs.token }}
        with:
          commit_message: "chore: update repo banner image"
          file_pattern: "${{ steps.meta.outputs.output }}"

      - name: Add image to step summary
        if: steps.auto-commit.outputs.changes_detected == 'true'
        run: |
          echo "## Generated Screenshot" >> $GITHUB_STEP_SUMMARY
          echo "![Generated Screenshot](https://github.com/${{ github.repository }}/blob/${{ steps.auto-commit.outputs.commit_hash }}/${{ steps.screenshot.outputs.file }}?raw=true)" >> $GITHUB_STEP_SUMMARY

      - name: No changes
        if: steps.auto-commit.outputs.changes_detected == 'false'
        run: |
          echo "No changes to screenshot" >> $GITHUB_STEP_SUMMARY

      - name: Create pull request
        if: inputs.commit_method == 'pr'
        uses: peter-evans/create-pull-request@v6
        id: auto-pr
        with:
          title: "chore: update banner image"
          commit-message: "chore: update banner image"
          add-paths: |
            ${{ steps.screenshot.outputs.file }}

          body: |-
            ## what
            This is an auto-generated PR that updates the banner image.

            ## why
            A banner image containing information about this repo should be displayed in the README.

          branch: "auto/banner"
          base: ${{steps.metadata.outputs.repository_default_branch}}
          delete-branch: true
            
          # Requires a GitHub PAT used to open PRs that trigger other workflows
          # https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow
          token: ${{ inputs.token }}
